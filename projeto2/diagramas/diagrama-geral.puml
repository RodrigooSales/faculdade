@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!includeurl DEVICONS/common.puml
!includeurl DEVICONS/devicons2/mysql.puml
!includeurl DEVICONS/devicons2/spring.puml
!includeurl DEVICONS/devicons2/flutter.puml

LAYOUT_WITH_LEGEND()

title System Context diagram for Microservices Architecture


System_Boundary(c1, "Apresentação") {
    System(frontend, "Frontend Microservice", "Handles user interface and requests from users.", $sprite="flutter")
}

System_Ext(gateway, "API Gateway", "Handles routing and load balancing.")
System_Ext(firebase, "Firebase", "Handles authentication and authorization.")
ContainerDb(users, "Firebase Users Database", "Stores user data.")


System_Boundary(c2, "Negócio") {
    System(criacao, "Criação Serviço", "Handles specific business logic.", $sprite="spring")
    System(individuos, "Individuos Serviço", "Handles specific business logic.", $sprite="spring")
    System(recintos, "Recintos Serviço", "Handles specific business logic.", $sprite="spring")
    System(especies, "Backend Serviço", "Handles specific business logic.", $sprite="spring")
}

System_Boundary(c3, "Persistência") {
    ContainerDb(database, "Database", "Stores data for all microservices.", $sprite="mysql")
}

Rel_D(frontend, gateway,)
Rel_R(gateway, firebase,)
Rel_R(firebase, users,)

BiRel_U(criacao, gateway, "Uses", "HTTP")
BiRel_U(individuos, gateway, "Uses", "HTTP")
BiRel_U(recintos, gateway, "Uses", "HTTP")
BiRel_U(especies, gateway, "Uses", "HTTP")

Rel(criacao, database, "URI", "JDBC")
Rel(individuos, database, "URI", "JDBC")
Rel(recintos, database, "URI", "JDBC")
Rel(especies, database, "URI", "JDBC")